import java.io.*;
import java.util.*;


class LowAttendanceException extends Exception {
    public LowAttendanceException(String message) {
        super(message);
    }
}


class Student implements Serializable {
    private int rollno;
    private String sname;
    private String course;
    private double attendance_percentage;
    private double score;
    private String grade;


    public Student() {}


    public Student(int rollno, String sname, String course, double attendance_percentage, double score) {
        this.rollno = rollno;
        this.sname = sname;
        this.course = course;
        this.attendance_percentage = attendance_percentage;
        this.score = score;
    }

   
    public void calculateGrade() throws LowAttendanceException {
        if (attendance_percentage < 60) {
            throw new LowAttendanceException("Attendance below 60% for student: " + sname);
        }

        if (score >= 90) grade = "A";
        else if (score >= 75) grade = "B";
        else if (score >= 60) grade = "C";
        else grade = "D";
    }

    public double getAttendancePercentage() {
        return attendance_percentage;
    }

    public String getSname() {
        return sname;
    }

    @Override
    public String toString() {
        return "Roll No: " + rollno + ", Name: " + sname + ", Course: " + course +
               ", Attendance: " + attendance_percentage + "%, Score: " + score +
               ", Grade: " + grade;
    }
}


public class StudentMain {
    public static void main(String[] args) {
    
        List<Student> students = new ArrayList<>();
        students.add(new Student(1, "Amit", "Java", 85, 92));
        students.add(new Student(2, "Riya", "Python", 58, 80));
        students.add(new Student(3, "Neha", "Java", 70, 75));
        students.add(new Student(4, "Vikram", "C++", 95, 90));
        students.add(new Student(5, "Sahil", "Java", 50, 88));
        students.add(new Student(6, "Kiran", "Python", 88, 78));
        students.add(new Student(7, "Priya", "C++", 65, 82));
        students.add(new Student(8, "Rohan", "Java", 90, 96));
        students.add(new Student(9, "Ananya", "Python", 75, 85));
        students.add(new Student(10, "Manish", "C#", 68, 72));

    
        for (Student s : students) {
            try {
                s.calculateGrade();
            } catch (LowAttendanceException e) {
                System.out.println("⚠️ " + e.getMessage());
            }
        }

       
        students.sort((s1, s2) -> Double.compare(s2.getAttendancePercentage(), s1.getAttendancePercentage()));

      
        System.out.println("\nStudents sorted by attendance (descending):");
        for (Student s : students) {
            System.out.println(s);
        }

      
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("students.dat"))) {
            for (Student s : students) {
                oos.writeObject(s);
            }
            System.out.println("\n✅ Students serialized successfully to students.dat");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
